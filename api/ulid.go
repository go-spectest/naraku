package api

import (
	"crypto/rand"
	"net/http"
	"time"

	"github.com/labstack/echo/v4"
	"github.com/oklog/ulid/v2"
)

// ULIDController is a controller for /ulid API.
type ULIDController struct{}

// NewULIDController returns a new ULIDController struct.
func NewULIDController() *ULIDController {
	return &ULIDController{}
}

type ULIDResponse struct {
	//	@Description	ULID is a ulid generated by server
	ULID string `json:"ulid"`
}

// generate returns ulid generated by server
//
//	@Summary	Generate ulid
//	@Tags		ulid
//	@Produce	json
//	@Success	200	{object}	ULIDResponse
//	@Router		/ulid [get]
func (ctrl *ULIDController) generate(c echo.Context) error {
	return c.JSON(http.StatusOK, ctrl.newULIDResponse())
}

// newULIDResponse returns ULIDResponse struct.
func (ctrl *ULIDController) newULIDResponse() *ULIDResponse {
	entropy := rand.Reader
	ms := ulid.Timestamp(time.Now())
	return &ULIDResponse{ULID: ulid.MustNew(ms, entropy).String()}
}
